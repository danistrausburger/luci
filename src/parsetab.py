
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftADDSUBleftMULTDIVrightUNARYACTION ADD ADDEQ AND ASSIGN CHARCHAR CREATE CUT DEAL DECR DIE DIV DIVEQ EL ELIF EOF EQUALS EX FROM GATE GREATER GREQUAL IF INCR ISNOT LEQUAL LESS LIE LPAREN MULT MULTEQ NOT NUMBER OR RETALIATE RPAREN SCENE SUB SUBEQ TARTARUS TO TRUTHstatement : CHARCHAR ASSIGN expressionstatement : expressionexpression : expression ADD expression\n                  | expression SUB expression\n                  | expression MULT expression\n                  | expression DIV expressionexpression : SUB expression %prec UNARYexpression : LPAREN expression RPARENexpression : NUMBERexpression : CHARCHAR'
    
_lr_action_items = {'CHARCHAR':([0,4,5,7,8,9,10,11,],[2,13,13,13,13,13,13,13,]),'SUB':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,],[4,-10,9,4,4,-9,4,4,4,4,4,-7,-10,9,9,-3,-4,-5,-6,-8,]),'LPAREN':([0,4,5,7,8,9,10,11,],[5,5,5,5,5,5,5,5,]),'NUMBER':([0,4,5,7,8,9,10,11,],[6,6,6,6,6,6,6,6,]),'$end':([1,2,3,6,12,13,15,16,17,18,19,20,],[0,-10,-2,-9,-7,-10,-1,-3,-4,-5,-6,-8,]),'ASSIGN':([2,],[7,]),'ADD':([2,3,6,12,13,14,15,16,17,18,19,20,],[-10,8,-9,-7,-10,8,8,-3,-4,-5,-6,-8,]),'MULT':([2,3,6,12,13,14,15,16,17,18,19,20,],[-10,10,-9,-7,-10,10,10,10,10,-5,-6,-8,]),'DIV':([2,3,6,12,13,14,15,16,17,18,19,20,],[-10,11,-9,-7,-10,11,11,11,11,-5,-6,-8,]),'RPAREN':([6,12,13,14,16,17,18,19,20,],[-9,-7,-10,20,-3,-4,-5,-6,-8,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'expression':([0,4,5,7,8,9,10,11,],[3,12,14,15,16,17,18,19,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> CHARCHAR ASSIGN expression','statement',3,'p_statement_assign','lexer2.py',175),
  ('statement -> expression','statement',1,'p_statement_expr','lexer2.py',179),
  ('expression -> expression ADD expression','expression',3,'p_expression_binop','lexer2.py',183),
  ('expression -> expression SUB expression','expression',3,'p_expression_binop','lexer2.py',184),
  ('expression -> expression MULT expression','expression',3,'p_expression_binop','lexer2.py',185),
  ('expression -> expression DIV expression','expression',3,'p_expression_binop','lexer2.py',186),
  ('expression -> SUB expression','expression',2,'p_expression_unary','lexer2.py',197),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','lexer2.py',201),
  ('expression -> NUMBER','expression',1,'p_expression_number','lexer2.py',205),
  ('expression -> CHARCHAR','expression',1,'p_expression_char','lexer2.py',209),
]
